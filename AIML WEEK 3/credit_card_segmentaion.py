# -*- coding: utf-8 -*-
"""credit card segmentaion.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17mnVnkpPYiLv88YeV_H5XetGs47G8mWO
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

df = pd.read_csv('CC GENERAL.xls')
df.head()

from sklearn.cluster import KMeans

kmeans = KMeans(n_clusters=4, random_state=42)
labels = kmeans.fit_predict(pca_data)

import matplotlib.pyplot as plt

plt.figure(figsize=(8,6))
plt.scatter(pca_data[:, 0], pca_data[:, 1], c=labels, cmap='Set1')
plt.title("Credit Card Users Clustered (K-Means + PCA)")
plt.xlabel("PCA 1")
plt.ylabel("PCA 2")
plt.grid(True)
plt.show()

from sklearn.metrics import silhouette_score

score = silhouette_score(pca_data, labels)
print(f"Silhouette Score: {score:.2f}")

df_cleaned = df.dropna().reset_index(drop=True)
df_cleaned = df_cleaned.select_dtypes(include=['number'])  # Only numeric features

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaled_data = scaler.fit_transform(df_cleaned)

from sklearn.decomposition import PCA
pca = PCA(n_components=2)
pca_data = pca.fit_transform(scaled_data)

from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters=4, random_state=42)
labels = kmeans.fit_predict(pca_data)

# Add cluster labels
df_cleaned['Cluster'] = labels
df_cleaned.groupby('Cluster').mean()