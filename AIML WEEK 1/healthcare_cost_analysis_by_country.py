# -*- coding: utf-8 -*-
"""Healthcare Cost Analysis by Country.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zf5_o5ZlCDrOw1q7QjPbxgt5wVWYlW5K
"""

# ðŸ“Œ Step 1: Install and Import Required Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Set style
sns.set(style="whitegrid")

# ðŸ“Œ Step 4: Check for missing values
df.isnull().sum()

# ðŸ“Œ Step 5: Select relevant columns and clean data
df_clean = df[['Country', 'Year', 'Life expectancy ', 'Total expenditure']].copy()
df_clean.dropna(inplace=True)

# Rename columns
df_clean.columns = ['Country', 'Year', 'Life_Expectancy', 'Health_Expenditure']
df_clean.head()

# ðŸ“Œ Step 6: Scatter Plot â€“ Health Spending vs Life Expectancy
plt.figure(figsize=(12, 6))
sns.scatterplot(data=df_clean, x='Health_Expenditure', y='Life_Expectancy', hue='Country', legend=False, alpha=0.6)
plt.title('Healthcare Expenditure vs Life Expectancy')
plt.xlabel('Health Expenditure (% of GDP)')
plt.ylabel('Life Expectancy (Years)')
plt.tight_layout()
plt.show()

# ðŸ“Œ Step 7: Bar Plot â€“ Top 10 Healthcare Spenders (in a recent year)
latest_year = df_clean['Year'].max()
df_latest = df_clean[df_clean['Year'] == latest_year]

top_spenders = df_latest.sort_values(by='Health_Expenditure', ascending=False).head(10)

plt.figure(figsize=(10, 6))
sns.barplot(data=top_spenders, x='Health_Expenditure', y='Country', palette='viridis')
plt.title(f'Top 10 Healthcare Spenders in {latest_year}')
plt.xlabel('Health Expenditure (% of GDP)')
plt.ylabel('Country')
plt.tight_layout()
plt.show()

# ðŸ“Œ Step 8: Correlation Heatmap (Optional)
plt.figure(figsize=(8,5))
sns.heatmap(df_clean[['Health_Expenditure', 'Life_Expectancy']].corr(), annot=True, cmap='coolwarm')
plt.title("Correlation between Health Spending and Life Expectancy")
plt.tight_layout()
plt.show()

# ðŸ“Œ Step 2: Upload the CSV File
from google.colab import files
uploaded = files.upload()

# ðŸ“Œ Step 3: Load the Dataset
df = pd.read_csv("Life Expectancy Data.xls")
df.head()